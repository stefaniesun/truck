<template>
  <div class="productQuery">
    <m-header isHeader="1" currentPage="1"></m-header>
    <!--搜索-->
    <div class="product-input">
      <img class="logo" src="../assets/img/productLogo.png" @click="$router.push({name : 'productQuery'})"/>
      <div class="input-search">
        <div class="search-input">
          <input @change="restSeacrh(searchContent)" type="text" placeholder="搜索航线/目的地等关键词" v-model="searchContent">
          <div @click="startSearch">搜索</div>
        </div>
        <div class="hot-search">热门搜索：<span v-for="num in hotSearch" @click="searchContent = num">{{num}}</span></div>
      </div>
      <div v-if="wechatCode" class="wechat-code">
        <div class="img-wrap">
          <img :src="wechatCode" alt="">
          <div class="code-preview">
            <img :src="wechatCode" alt="">
          </div>
        </div>
        <span>邮轮分销微信公众号</span>
      </div>
      <div class="clearfloat"></div>
    </div>
    <div class="border-top"></div>
    <!--搜索条件-->
    <div ref="screenPanel" class="search-condition clearfloat">
      <div ref="searchItem" class="search-item" v-for="(item,index) in screenClass">
        <div class="select-general">
          <i class="icon-box">
            <svg class="icon" aria-hidden="true">
              <use :xlink:href="item.icon"></use>
            </svg>
          </i>
          <span>{{item.title}}</span>
        </div>
        <!-- :style="index == 1?'width:672px':index == 2?'width:840px':''"-->
        <ul :style="index == 1?'width:672px':''" class="choice-content">
          <li @click="changeScreenKey(index,num)" v-for="(key,num) in  keyArr[index]" :class="key.status ? 'selected':''" >
            <span>{{key.value}}</span>
          </li>
        </ul>
        <div v-if="index == 1 && keyArr.length > 0" class="date-select select">
          <DatePicker
            v-model="startDate"
            :options="dateOptions"
            type="date"
            :editable="false"
            :transfer="true"
            placeholder="点击选择开始日期">
          </DatePicker>
          <span>~</span>
          <DatePicker
            v-model="endDate"
            :options="dateOptions"
            type="date"
            placement="bottom-end"
            :editable="false"
            :transfer="true"
            placeholder="点击选择结束日期">
          </DatePicker>
          <div @click="getDateSection" class="btn">
            确定
          </div>
        </div>
        <!--<div v-if="index == 2" class="price-select select">-->
          <!--<Input v-model.number.trim="specificPrice" type="text" style="width: 172px" placeholder="可输入具体价格"></Input>-->
          <!--<div @click="getPrice" class="btn">-->
            <!--确定-->
          <!--</div>-->
        <!--</div>-->
        <div class="clearfloat"></div>
      </div>
      <transition name="drop-down"
        enter-active-class=" animated slideDown"
        leave-active-class="animated slideUp">
        <div v-if="showScreenKeyArr" class="down-slider clearfloat">
          <div v-if="item" v-for="(item,index) in screenKeyArr" class="already-selected">
            {{item.value}}
            <i class="icon-box">
              <svg class="icon" aria-hidden="true" @click="clickDelete(index)">
                <use xlink:href="#icon-cha"></use>
              </svg>
            </i>
          </div>
          <div class="clear-all" @click="deleteAll">清除全部</div>
        </div>
      </transition>
    </div>
    <!--内容展示-->
    <div class="content-display" >
      <!--有内容-->
      <div class="content-width" v-if="content.length > 0">
        <div @click="goProductDetail(num.numberCode)" class="single-product" v-for="num in content">
          <div class="cruise-img">
            <img v-if="num.image" :src="num.image">
            <img v-if="!num.image" src="../assets/img/baseImg.png" alt="">
            <div>￥<span>{{num.price}}</span>起/人</div>
          </div>
          <div class="cruise-title">{{num.name}}</div>
          <div class="set-outDate">
            <i class="icon-box">
              <svg class="icon" aria-hidden="true">
                <use xlink:href="#icon-date"></use>
              </svg>
            </i>
            <span>出发日期：{{num.date.substring(0,10)}}</span>
          </div>
          <div class="set-outDate">
            <i class="icon-box">
              <svg class="icon" aria-hidden="true">
                <use xlink:href="#icon-chengshi"></use>
              </svg>
            </i>
            <span>出发城市：{{num.startCity}}</span>
          </div>
          <div class="set-outDate">
            <i class="icon-box">
              <svg class="icon" aria-hidden="true">
                <use xlink:href="#icon-youlunyou1"></use>
              </svg>
            </i>
            <span>邮轮号：{{num.cruiseNameCn}}</span>
          </div>
          <div class="view-details"><span>查看详情</span></div>
        </div>
        <div class="clearfloat"></div>
      </div>
      <!--无内容-->
      <div class="blank" v-if="content.length == 0">
        <div class="no-content">
          <img src="../assets/img/noContent.png">
          <div>暂时没有相关内容</div>
        </div>
      </div>
    </div>
    <!--分页展示-->
    <div class="paging-display" v-if="content.length > 0">
      <div>
        <Page :total="total" :current="page" :page-size="12" @on-change="pageChange" className="paging-style"></Page>
      </div>
    </div>
    <m-footer></m-footer>
  </div>
</template>
<script>
  let vm;
  import common from '@/assets/js/common';
  import MHeader from '@/components/header'
  import MFooter from '@/components/footer'
  import QRCode from 'qrcode';
  import Vue from 'vue';
  export default {
    name : 'productQuery',
    components:{
      MHeader,
      MFooter
    },
    data(){
      return{
        hotSearch:['哥斯达邮轮','星大王邮轮'],//热门搜索内容
        searchContent:'',//搜索内容
        page : 1,//当前页数
        content:[],//当前数据内容
        screenClass: [
          {
            title: '航区',
            icon: '#icon-hangxian1'
          },
          {
            title:  '日期',
            icon: '#icon-riqi'
          },
          {
            title: '价格',
            icon: '#icon-jiage'
          },
          {
            title: '邮轮',
            icon: '#icon-youlunyou'
          }
        ],//筛选数据title
        initKeyArr:[],//筛选过后的数据
        keyArr: [],//筛选数据
        screenKeyArr: [],//选中的筛选条件
        showScreenKeyArr: false,//筛选框是否显示
        screenUpData: new Object,
        total: 1,//总数量
        upData : {
          page: 1,
          rows: 12,
          area: '',
          date: '',
          price:'',
          cruise: '',
          startDate: '',
          endDate: ''
        },//筛选数据接口的参数
        startDate: '',
        endDate: '',
        isDateSection: false,
        dateOptions: {
          disabledDate (date) {
            return date && date.valueOf() < Date.now() - 86400000;
          }
        },
        wechatCode: ''
      }
    },
    mounted(){
      vm = this;
      if(!sessionStorage.getItem('qrcode')){
        vm.createQrcode();
      }
      vm.getHotLProList();
      vm.axios.post(this.api+this.urlApi.getSelectData).then(function (data) {
      	if(data.status){
          let content = data.content;
          if(content.length>0){
            let airwayArr = new Array;
            let dateArr = new Array;
            let priceArr = new Array;
            let cruiseArr = new Array;
            for(let i=-1;i<content.length;i++){
              let airwayObj = {};
              let dateObj = {};
              let priceObj = {};
              let cruiseObj = {};
              let status = false;
              if(i==-1){
                status = true;
                let value = '不限';
                airwayObj.value = value;
                dateObj.value = value;
                priceObj.value = value;
                cruiseObj.value = value;
              }else {
                let dateTempArr = content[i].dateMark;
                let year = dateTempArr.substring(0,2);
                let month = dateTempArr.substring(2,4);
                content[i].dateMark = year +'年/'+ month+'月';
                content[i].basePrice = content[i].basePrice.substring(0,4);
                airwayObj.value = content[i].areaNameCn;
                airwayObj.id = content[i].area;
                dateObj.value = content[i].dateMark;
                let priceTitle = content[i].basePrice >= 0 && content[i].basePrice < 3000 ? '3000以下' : content[i].basePrice >= 3000 && content[i].basePrice <= 5000 ? '3000-5000' : '5000以上';
                priceObj.value = priceTitle;
                cruiseObj.value = content[i].cruiseNameCn;
                cruiseObj.id = content[i].cruise;
              }
              airwayObj.status = status;
              airwayArr.push(airwayObj);
              dateObj.status = status;
              dateArr.push(dateObj);
              priceObj.status = status;
              priceArr.push(priceObj);
              cruiseObj.status = status;
              cruiseArr.push(cruiseObj);
            }
            vm.$set(vm.keyArr,0,vm.removeDuplicate(airwayArr));
            vm.$set(vm.keyArr,1,vm.dateSort(vm.removeDuplicate(dateArr)));
            vm.$set(vm.keyArr,2,vm.removeDuplicate(priceArr));
            vm.$set(vm.keyArr,3,vm.removeDuplicate(cruiseArr));
            vm.cloneKeyArr = common.clone(vm.keyArr);
            vm.initKeyArr = content;
            vm.$nextTick(function () {
              vm.selectPanelHeight = vm.getPanelHeight();
            })
          }
        }
      })
    },
    methods:{
      startSearch(){
      	if(!vm.searchContent){
          vm.dialog.showDialog('请先输入关键词');
          return;
        }
        vm.page = 1;
        vm.isDateSection = false;
        vm.startDate = '';
        vm.endDate = '';
        if(vm.screenKeyArr){
          for(let i=0;i<vm.screenKeyArr.length;i++){
            vm.screenKeyArr[i] = '';
          }
          vm.keyArr = vm.cloneKeyArr;
        }
        let parame = {
          page: vm.page,
          rows: 12,
          keyword: vm.searchContent
        }
        vm.axios.post(this.api + this.urlApi.queryVoyageListByKeyword,parame).then(function (data) {
        	if(data.status){
            let content = data.content;
            vm.total = content.total;
            vm.content = content.rows;
          }
        })
      },
      restSeacrh(value){
        if(!value && vm.content == 0){
          vm.page = 1;
          vm.getHotLProList();
        }
      },
      getHotLProList(){
        let parame ={
          page: vm.page,
          rows: 12
        };
        vm.axios.post(this.api+this.urlApi.queryVoyageList,parame).then(function (data) {
          if(data.status){
            if(data.content.rows.length > 0){
              vm.content = data.content.rows;
              vm.total = data.content.total;
              vm.$nextTick(function(){
                let prev = document.querySelector('.ivu-page-prev');
                prev.innerHTML = '上一页';
                let next = document.querySelector('.ivu-page-next');
                next.innerHTML = '下一页';
              });
            }else {
              vm.dialog.showDialog('暂无数据');
            }
          }
        });
      },
      dateSort(array){
        let arrayTemp = new Array;
        for(let i=0;i<array.length;i++){
        	if( i>0 ){
        		let dateStr = array[i].value.split('/');
        		let year = new Date().getFullYear().toString().substring(0,2).toString() + dateStr[0].substring(0,2).toString();
        		let month = dateStr[1].substring(0,2).toString();
        		let day = '01';
        		let newDate = new Date(year+'/'+month+'/'+day);
            arrayTemp.push(newDate.getTime());
          }
        }
        arrayTemp.sort();
        for(let j=0;j<arrayTemp.length;j++){
          let unixTimestamp = new Date( arrayTemp[j] ) ;
          let commonTime = unixTimestamp.toLocaleString();
          commonTime = commonTime.split(' ')[0].split('/');
          let year = commonTime[0].substring(2,4);
          let month = commonTime[1] < 10 ? "0" + commonTime[1] : commonTime[1];
          let dateStr = year+'年/'+month+'月';
          array[j+1].value = dateStr;
        }
        return array;
      },
      removeDuplicate(array) {
        let re = [array[0]];
        let This = new Array;
        for (let i = 1; i < array.length; i++) {
          This.push(array[i]);
        }
        This.sort();
        for (let i = 0; i < This.length; i++) {
        	let onOff = true;
          for(let j=0;j<re.length;j++){
            if (This[i].value == re[j].value) {
              onOff = false;
            }
          }
          if(onOff) re.push(This[i]);
        }
        return re;
      },//筛选关键词去重, 参数 array 需要去重的关键词数组
      getPanelHeight(){
        let searchItem = vm.$refs['searchItem'];
        let panelHeight = 0;
        for(let i=0;i<searchItem.length;i++){
          panelHeight += searchItem[i].offsetHeight;
        }
        return panelHeight + 1;
      },
      changeScreenKey(menuIndex,screenIndex){
        vm.searchContent = '';
        vm.menuIndex = menuIndex;
        if(menuIndex == 1){
        	vm.isDateSection = false;
        	vm.startDate = '';
        	vm.endDate = '';
        }
        let obj = vm.keyArr[menuIndex];
        if(obj[screenIndex].status) return;
        for (let i = 0; i < obj.length; i++) {
          i == screenIndex ? vm.$set(obj[i],'status',true) : vm.$set(obj[i],'status',false);
        }
        if( screenIndex == 0 ){
          vm.screenKeyArr[menuIndex] = '';
          vm.resetKeyArr(false);
        }else {
          let keyObj = {};
          keyObj.value = obj[screenIndex].value;
          switch (menuIndex)
          {
            case 0:
              keyObj.id = obj[screenIndex].id;
              keyObj.key = 'areaNameCn';
              break;
            case 1:
              keyObj.key = 'dateMark';
              break;
            case 2:
              keyObj.key = 'basePrice';
              let price = obj[screenIndex].value;
              keyObj.value = price;
              break;
            case 3:
              keyObj.id = obj[screenIndex].id;
              keyObj.key = 'cruiseNameCn';
              break;
          }
          if(menuIndex == 1){
            vm.screenKeyArr[menuIndex] = vm.dateSort(keyObj);
          }else {
            vm.screenKeyArr[menuIndex] = keyObj;
          }
          vm.resetKeyArr(true);
        }
      },//组装点击的筛选数据
      getScreenKey(){
        let realScreenKey = new Array;
        for(let i=0;i<vm.screenKeyArr.length;i++){
          if(vm.screenKeyArr[i]) realScreenKey.push(vm.screenKeyArr[i]);
        }
        let obj = {
          area: '',
          areaNameCn: '',
          dateMark: '',
          basePrice: '',
          cruiseNameCn: '',
          cruise: ''
        };
        for(let j=0;j<realScreenKey.length;j++){
          let key = realScreenKey[j].key;
          switch (key)
          {
            case 'areaNameCn':
              obj.areaNameCn = realScreenKey[j].value;
              obj.area = realScreenKey[j].id;
              break;
            case 'dateMark':
              obj.dateMark = realScreenKey[j].value;
              break;
            case 'basePrice':
              obj.basePrice = realScreenKey[j].value;
              break;
            case 'cruiseNameCn':
              obj.cruiseNameCn = realScreenKey[j].value;
              obj.cruise = realScreenKey[j].id;
              break;
          }
        }
        vm.getScreenPanelStatus(obj);
        vm.screenUpData = obj;
        return obj;
      },//组装筛选数据
      resetKeyArr(flag){
        let screenKeyArr = vm.getScreenKey();
        let keyArr = new Array;
        for(let n=0;n<vm.initKeyArr.length;n++){
          let A = vm.initKeyArr[n];
          let onOff = true;
          if(screenKeyArr.areaNameCn && A.areaNameCn !== screenKeyArr.areaNameCn ) onOff = false;
          if( !vm.isDateSection ){
            if(screenKeyArr.dateMark && A.dateMark !== screenKeyArr.dateMark ) onOff = false;
          }
          if(screenKeyArr.basePrice){
            let realPrice =  screenKeyArr.basePrice;
            let priceArr;
            if(realPrice.indexOf('-')>-1){
              priceArr = realPrice.split('-');
              if(A.basePrice < priceArr[0] || A.basePrice > priceArr[1]) onOff = false;
            }else if(realPrice.indexOf('以上')>-1) {
              priceArr = realPrice.split('以上')[0];
              if(A.basePrice < priceArr[0]) onOff = false;
            }else if(realPrice.indexOf('以下')>-1) {
              priceArr = realPrice.split('以下')[0];
              if(A.basePrice > priceArr[0]) onOff = false;
            }
          }
          if(screenKeyArr.cruiseNameCn && A.cruiseNameCn !== screenKeyArr.cruiseNameCn ) onOff = false;
          if(onOff){
            keyArr.push(A);
          }
        }
        let airwayArr = new Array;
        let dateArr = new Array;
        let priceArr = new Array;
        let cruiseArr = new Array;
        for(let i=-1;i<keyArr.length;i++){
          let airwayObj = {};
          let dateObj = {};
          let priceObj = {};
          let cruiseObj = {};
          if(i==-1){
            let value = '不限';
            airwayObj.value = value;
            dateObj.value = value;
            priceObj.value = value;
            cruiseObj.value = value;
          }else {
            airwayObj.value = keyArr[i].areaNameCn;
            airwayObj.id = keyArr[i].airway;
            dateObj.value = keyArr[i].dateMark;
            let priceTitle =  keyArr[i].basePrice >= 0 &&  keyArr[i].basePrice < 3000 ? '3000以下' :  keyArr[i].basePrice >= 3000 &&  keyArr[i].basePrice <= 5000 ? '3000-5000' : '5000以上';
            priceObj.value = priceTitle;
            cruiseObj.value = keyArr[i].cruiseNameCn;
            cruiseObj.id = keyArr[i].cruise;
          }
          airwayArr.push(airwayObj);
          dateArr.push(dateObj);
          priceArr.push(priceObj);
          cruiseArr.push(cruiseObj);
        }
        dateArr = vm.dateSort(dateArr);
        let objName = [airwayArr,dateArr,priceArr,cruiseArr];
        for(let r=0;r<objName.length;r++){
          if(flag){
            if( vm.menuIndex !== r){
              objName[r] = vm.setStatus(objName[r],r);
              vm.$set(vm.keyArr,r,vm.removeDuplicate(objName[r]))
            }
          }else {
            objName[r] = vm.setStatus(objName[r],r);
            vm.$set(vm.keyArr,r,vm.removeDuplicate(objName[r]))
          }
        }
      },
      setStatus(arr,index){
        let screenKeyArr = vm.getScreenKey();
        for(let c=0;c<arr.length;c++){
          arr[c].status = true;
          if( c > 0){
            let value;
            switch (index)
            {
              case 0:
                value = screenKeyArr.areaNameCn;
                break;
              case 1:
                value = screenKeyArr.dateMark;
                break;
              case 2:
                value = screenKeyArr.basePrice;
                break;
              case 3:
                value = screenKeyArr.cruiseNameCn;
                break;
            }
            if(arr[c].value !== value){
              arr[c].status = false;
            }else {
              arr[0].status = false;
            }
          }
          if( index == 1 && vm.isDateSection ){
            arr[c].status = false;
          }
        }
        return arr;
      },
      clickDelete(index){
        vm.screenKeyArr[index] = '';
        if(index == 1){
          vm.isDateSection = false;
          vm.startDate = '';
          vm.endDate = '';
        }
        vm.resetKeyArr(false);
      },
      deleteAll(){
        for(let i=0;i<vm.screenKeyArr.length;i++){
          vm.screenKeyArr[i] = '';
        }
        vm.isDateSection = false;
        vm.startDate = '';
        vm.endDate = '';
        let height = vm.getPanelHeight() < vm.selectPanelHeight ? vm.selectPanelHeight :  vm.getPanelHeight();
        vm.$refs['screenPanel'].style.height = height + 'px';
        vm.resetKeyArr(false);
      },
      getScreenPanelStatus(obj){
        let onOff = false;
        for(let m in obj){
          if(obj[m])onOff = true;
        }
        vm.showScreenKeyArr = onOff;
        let height = vm.getPanelHeight() < vm.selectPanelHeight ? vm.selectPanelHeight : vm.getPanelHeight();
        onOff ? height += 40 : height;
        vm.$refs['screenPanel'].style.height = height + 'px';
        return onOff;
      },
      getDateSection(){
        let startDate,endDate;
      	if( vm.startDate && vm.endDate && vm.startDate > vm.endDate ){
          vm.dialog.showDialog('开始日期不能大于结束日期');
          return
        }else if(!vm.startDate && !vm.endDate){
      		if(vm.isDateSection){
            vm.isDateSection = false;
            vm.screenKeyArr[1] = '';
            vm.getScreenPanelStatus(vm.screenKeyArr);
            for(let i=0;i<vm.keyArr[1].length;i++){
              i==0 ? vm.keyArr[1][i].status = true : vm.keyArr[1][i].status = false;
            }
          }else {
            vm.dialog.showDialog('请先选择日期');
            return
          }
        }else {
          startDate = vm.startDate ? new Date(vm.startDate).Format("yyyy-MM-dd") : '';
          endDate = vm.endDate ? new Date(vm.endDate).Format("yyyy-MM-dd") : '';
          vm.isDateSection = true;
          vm.searchContent = '';
          for(let i=0;i<vm.keyArr[1].length;i++){
            vm.keyArr[1][i].status = false;
          }
          let value = '';
          if(vm.startDate && vm.endDate){
            value = startDate +' ~ '+ endDate;
          }else if(!vm.startDate && vm.endDate){
            value = endDate;
          }else if(vm.startDate && !vm.endDate){
            value = startDate;
          }
          if(vm.screenKeyArr[1]){
            vm.screenKeyArr[1].value = value;
          }else {
          	let obj = {
              key: 'dateMark',
              value: value
            }
            vm.screenKeyArr[1] = obj;
            vm.showScreenKeyArr = true;
            let height = vm.getPanelHeight() < vm.selectPanelHeight ? vm.selectPanelHeight :  vm.getPanelHeight();
            vm.$refs['screenPanel'].style.height = height + 40 + 'px';
          }
        }
        vm.page = 1;
        vm.upData.page = vm.page;
        vm.upData.date = '';
        vm.upData.startDate = startDate;
        vm.upData.endDate = endDate;
        vm.axios.post(this.api+this.urlApi.getQueryData,vm.upData).then(function (data) {
        	if(data.status){
            let content = data.content;
            vm.total = content.total;
            vm.content = content.rows;
          }
        })
      },
      pageChange:function (page) {
        vm.page = page;
        if(vm.showScreenKeyArr){
          let parame ={
            page: vm.page,
            rows: 12
          };
          vm.axios.post(this.api+this.urlApi.queryVoyageList,parame).then(function (data) {
            if(data.status){
              vm.total = data.content.total;
              vm.content = data.content.rows;
            }
          });
        }else if(vm.searchContent){
          let parame = {
            page: vm.page,
            rows: 12,
            keyword: vm.searchContent
          }
          vm.axios.post(this.api + this.urlApi.queryVoyageListByKeyword,parame).then(function (data) {
            if(data.status){
              let content = data.content;
              vm.total = content.total;
              vm.content = content.rows;
            }
          })
        }else {
          vm.axios.post(this.api+this.urlApi.getQueryData,vm.upData).then(function (data) {
            if(data.status){
              let content = data.content;
              vm.total = content.total;
              vm.content = content.rows;
            }
          })
        }
      },//分页改变
      goProductDetail(numberCode){
        sessionStorage.setItem('numberCode',numberCode);
        vm.$router.push('/productDetail');
      },
      createQrcode(){
        let paramJson = {
          type: 'binding',
          distributor: sessionStorage.getItem('userCode')
        }
        paramJson = JSON.stringify(paramJson);
        vm.axios.post(this.api+this.urlApi.addShortCode,{paramJson: paramJson}).then(function (response) {
          if(response.status){
          	let urlCode = response.content.numberCode;
            let publicParame = {
              outkey: sessionStorage.getItem('outkey'),
              second: 2592000,
              type: 1,
              value: urlCode
            }
            vm.axios.post(vm.api+vm.urlApi.createQrcode,publicParame).then(function (data) {
              if(data.status){
                let url = data.content.url;
                QRCode.toDataURL(url,{ errorCorrectionLevel:'H' } , function (err, url) {
                  vm.wechatCode = url;
                  sessionStorage.setItem('qrcode',vm.wechatCode);
                })
              }
            })
          }
        })


      }
    },
    watch:{
      screenUpData: {
        handler(newVal){
          let dateArr;
          let year;
          let month;
          let price;
          if(newVal.dateMark){
          	if( newVal.dateMark.indexOf('/')>-1 ){
              dateArr = newVal.dateMark.split('/');
              year = dateArr[0].substring(0,2);
              month = dateArr[1].substring(0,2);
            }
          }
          if(newVal.basePrice){
            let priceArr;
            if( newVal.basePrice.indexOf('-')>-1){
              priceArr =  newVal.basePrice.split('-');
              price = priceArr[0]+','+priceArr[1];
            }else if(newVal.basePrice.indexOf('以上')>-1) {
              priceArr = newVal.basePrice.split('以上');
              price = priceArr[0]+',50000';
            }else if(newVal.basePrice.indexOf('以下')>-1) {
              priceArr = newVal.basePrice.split('以下');
              price = '0,'+priceArr[0];
            }
          }
          vm.page = 1;
          vm.upData = {
            page: vm.page,
            rows: 12,
            area: newVal.area,
            date: vm.isDateSection ? '' : newVal.dateMark ? year+month : '',
            price: newVal.basePrice ? price : '',
            cruise: newVal.cruise,
            startDate: vm.isDateSection ? vm.startDate ? new Date(vm.startDate).Format("yyyy-MM-dd") : '' : '',
            endDate: vm.isDateSection ? vm.endDate ? new Date(vm.endDate).Format("yyyy-MM-dd") : '' : ''
          }
          vm.axios.post(this.api+this.urlApi.getQueryData,vm.upData).then(function (data) {
          	if(data.status){
              let content = data.content;
              vm.total = content.total;
              vm.content = content.rows;
            }
          })
        },
        deep: true
      }
    }
  }
</script>
<style lang="less">
  @import "../assets/css/common";
  @blueColor:#6aadff;
  @iconColor:#e6e6e6;
  .productQuery{
    width: 100%;
    height: 100%;
    background-color: #fff;
    .product-input{
      width: 1200px;
      margin: 0 auto;
      padding: 18px 0;
      .logo{
        width: 151px;
        height: 106px;
        margin-right: 100px;
        cursor: pointer;
        float: left;
      }
      .input-search{
        display: inline-block;
        float: left;
        padding-top: 23px;
        .search-input{
          width: 700px;
          height: 40px;
          border-radius: 20px;
          border:1px solid @blueColor;
          input{
            width: 579px;
            height: 38px;
            line-height: 38px;
            border:0;
            outline: none;
            border-radius: 19px 0 0 19px;
            padding-left: 30px;
            font-size: 14px;
          }
          input::placeholder{
            color:#ccc;
          }
          div{
            width: 120px;
            height: 40px;
            background-color: #ff9b0b;
            float: right;
            border-radius: 0 20px 20px 0;
            margin: -1px -1px 0 0;
            text-align: center;
            line-height: 40px;
            color:#fff;
            cursor: pointer;
            font-size: 16px;
          }
        }
        .hot-search{
          width: 700px;
          padding-left: 31px;
          font-size: 14px;
          color:#666666;
          line-height: 30px;
          span{
            cursor: pointer;
            margin-right: 10px;
          }
        }
      }
      .wechat-code{
        width: 117px;
        height: 117px;
        text-align: center;
        float: right;
        margin-right: 60px;
        position: relative;
        .img-wrap{
          width: 96px;
          height: 96px;
          margin: 0 auto;
          border: 1px solid @lineColor;
          .borderRadius;
          img{
            width: 100%;
            height: 100%;
          }
          .code-preview{
            width: 212px;
            height: 212px;
            position: absolute;
            right: 0;
            top: 120px;
            z-index: 22;
            display: none;
            border: 1px solid @lineColor;
            .borderRadius;
            overflow: hidden;
          }
        }
        &:hover{
          .code-preview{
            display: block;
          }
        }
      }
    }

    .border-top{
      width: 100%;
      height: 10px;
      background-color: #eff4f7;
    }
    .search-condition{
      width: 1200px;
      margin: 20px auto;
      transition: all .3s;
      border-top: 1px solid @iconColor;
      .search-item{
        border: 1px solid @iconColor;
        border-top: none;
        width: 100%;
        min-height: 40px;
        position: relative;
        transition: all .3s;
        .select-general{
          width: 100px;
          height: 40px;
          line-height: 40px;
          font-size: 16px;
          color:#333;
          float: left;
          .icon-box{
            float: left;
            padding:2px 10px 2px 8px;
            .icon{
              font-size: 20px;
            }
          }
        }
        .choice-content{
          width: 1098px;
          float: left;
          min-height: 40px;
          line-height: 40px;
          position: relative;
          transition: all .3s;
          >li{
            height: 40px;
            line-height: 40px;
            padding: 0 11px;
            float: left;
            font-size: 14px;
            color:#999999;
            cursor: pointer;
          }
          .selected{
            color:#ff9b0b;
            span{
              padding-bottom: 3px;
              border-bottom:2px solid #ff9b0b;
            }
          }
        }
        .select{
          height: 100%;
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          right: 10px;
        }
        .date-select{
          width: 416px;
          height: 26px;
        }
        .price-select{
          width: 229px;
        }
        .btn{
          width: 50px;
          height: 26px;
          line-height: 26px;
          text-align: center;
          float: right;
          border-radius: 4px;
          background: #ff9b0b;
          color: #fff;
          font-size: 14px;
          cursor: pointer;
        }
      }
      .down-slider{
        border: 1px solid @lineColor;
        border-top: none;
        min-height: 40px;
        .already-selected{
          height: 24px;
          line-height: 22px;
          border:1px solid #cccccc;
          margin: 8px 10px;
          padding: 0 5px;
          font-size: 14px;
          color:#333333;
          float: left;
          border-radius: 4px;
          .icon-box{
            font-size: 15px;
            margin-left: 10px;
            cursor: pointer;
            color:#cccccc;
          }
        }
        .already-selected:hover{
          border-color:@blueColor;
          .icon-box{
            color:@blueColor;
          }
        }
        .clear-all{
          float: left;
          height: 24px;
          line-height: 24px;
          margin: 8px 0;
          font-size: 14px;
          color:@blueColor;
          cursor: pointer;
        }
      }
      .animated {
        animation-duration: .3s;
        animation-fill-mode: both;
      }
      @keyframes slideDown {
        from {
          transform: translate3d(0, -100%, 0);
          opacity: 0;
        }
        to {
          transform: translate3d(0, 0, 0);
          opacity: 1;
        }
      }
      .slideDown {
        animation-name: slideDown;
      }
      @keyframes slideUp {
        from {
          transform: translate3d(0, 0, 0);
          opacity: 1;
        }
        to {
          transform: translate3d(0, -100%, 0);
          opacity: 0;
        }
      }
      .slideUp {
        animation-name: slideUp;
      }
    }
    .content-display{
      width: 100%;
      background-color: #eff4f7;
      min-width: 1220px;
      padding: 20px 0;
      position: relative;
      .content-width{
        width: 1220px;
        margin: 0 auto;
        .single-product{
          width: 285px;
          height: 344px;
          max-height: 344px;
          margin: 20px 10px;
          background-color: #fff;
          padding: 11px;
          border-radius: 8px;
          float: left;
          transition: all .3s;
          cursor: pointer;

          overflow: hidden;
          position: relative;
          .cruise-img{
            width: 100%;
            height: 182px;
            border-radius: 8px;
            position: relative;
            img{
              width: 100%;
              height: 100%;
            }
            div{
              width: 102px;
              height: 29px;
              background-image: url("../assets/img/money.png");
              background-size: 100% 100%;
              position: absolute;
              top:10px;
              left: -3px;
              font-size: 12px;
              padding-top: 2px;
              color:#fff;
              span{
                font-size: 18px;
              }
            }
          }
          .cruise-title{
            font-size: 14px;
            color:#333333;
            line-height: 20px;
            margin: 8px 0 6px 0;
          }
          .set-outDate{
            font-size: 14px;
            color:#999999;
            span{
              margin-left: 5px;
            }
            .icon-box{
              font-size: 14px;
            }
          }
          .view-details{
            font-size: 14px;
            color:@blueColor;
            text-align: center;
            position: absolute;
            bottom: 8px;
            left: 50%;
            transform: translateX(-50%);
            span{
              cursor: pointer;
            }
          }
        }
        .single-product:hover{
          box-shadow: 0 0 21px rgba(74,147,236,.27);
          transform: scale(1.1);
        }
      }
      .blank{
        width: 1200px;
        height: 550px;
        background-color: #fff;
        border-radius: 8px;
        margin: 20px auto;
        padding-top: 140px;
        text-align: center;
        position: relative;
      }
    }
    .paging-display{
      height: 50px;
      width: 100%;
      background-color: #fff;
      text-align: center;
      line-height: 50px;
      div{
        display: inline-block;
        margin-top: 10px;
      }
    }
  }
</style>
