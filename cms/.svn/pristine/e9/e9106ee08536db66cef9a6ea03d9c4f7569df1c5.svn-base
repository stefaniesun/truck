<template>
  <div id="beforLogin">
    <img v-if="status" class="success-img" src="../assets/img/loginSuccess.jpg" alt="">
  </div>
</template>

<script>
  let vm;
  import common from '@/assets/js/common'
  export default{
  	name: 'beforLogin',
    data(){
  		return{
        status: false,
        data: {}
      }
    },
    mounted(){
  		vm = this;
      let parame = common.getUrlParameters();
      let openid;
      openid = process.env.NODE_ENV !== 'development' ? parame.openid : 'qwerty';
      vm.data = {openid: openid};
      let code = sessionStorage.code;
      if(code) vm.data.code = code;
      if(sessionStorage.urlJson){
        let urlJson = JSON.parse(sessionStorage.urlJson);
        sessionStorage.setItem('userCode',urlJson.distributor);
        sessionStorage.setItem('numberCode',urlJson.voyage);
        sessionStorage.setItem('isQRcode',urlJson.isQRcode);
        sessionStorage.setItem('originalPath','/ptDetailToC');
      }
      vm.getPossessorInfo();
    },
    methods:{
      bindingOper(data){
        vm.axios.post(this.api+this.urlApi.validateWechatBindingOper,data).then(function (rep) {
          if(rep.status){
            data.code === undefined ? vm.wechatLogin(data.openid) : vm.status = true;
          }else {
            let deviceType;
            deviceType = data.code ? 'pc' : 'wechat';
            sessionStorage.setItem('code',data.code);
            sessionStorage.setItem('deviceType',deviceType);
            sessionStorage.setItem('openid',data.openid);
            vm.$router.replace('binding');
          }
        })
      },
      wechatLogin(openId){
        vm.axios.post(this.api+this.urlApi.wechatLoginOper,{openId: openId}).then(function (data) {
          if(data.status){
            let obj = data.content;
            sessionStorage.setItem('apikey',obj.apikey);
            sessionStorage.setItem('saleLevel',obj.saleLevel);
            sessionStorage.setItem('rebatelevel',obj.rebatelevel);
            sessionStorage.setItem('userCode',obj.userCode);
            sessionStorage.setItem('openid',openId);
            let originalPath = sessionStorage.originalPath;
            originalPath ? vm.$router.replace(originalPath) : vm.$router.replace('/productQuery');
          }
        })
      },
      getPossessorInfo(){
        let parame = {
          domain: location.hostname
        };
        vm.axios.post(this.api + this.urlApi.getPossessorInfo,parame).then(function (response) {
          if(response.status == 1){
            sessionStorage.setItem('possessor',response.content);
            vm.data.possessor = response.content;
            vm.bindingOper(vm.data);
          }
        })
      },
    }
  }
</script>

<style lang="less" scoped>
  @import "../assets/css/base.less";
  #beforLogin{
    width: 100%;
    height: 100%;
    position: relative;
    .success-img{
      width: 100%;
      height: 100%;
      display: block;
    }
  }
</style>
