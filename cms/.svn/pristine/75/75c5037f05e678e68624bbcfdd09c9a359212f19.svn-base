<template>
  <div class="orderAll">
    <mt-loadmore :bottom-method="loadBottom" :bottom-all-loaded="allLoaded" :auto-fill="false" ref="loadmore">
      <section v-for="(item,index) in orderList">
        <div class="number-wrapper panel-top">
          <div class="content-center clearfloat">
            <span class="order-num">订单号：{{item.numberCode}}</span>
            <span class="cabin-type">{{item.stockType == 1 ? '现询':'实库'}}</span>
          </div>
        </div>
        <div class="info-wrapper ">
          <div class="content-center">
            <div class="order-info clearfloat">
              <div class="img-wrap">
                <img :src="item.image" alt="">
              </div>
              <div class="detail">
                <h3 @click="jumpDetail(item.voyage)">{{item.title}}</h3>
              </div>
              <div class="tips">
                <span class="old-price" >&yen;{{item.amount}}</span>
                <span class="fanxian" v-if="item.rebatePer">{{'后返' + item.rebatePer + '/人'}}</span>
              </div>
            </div>
            <ul class="info-panel clearfloat">
              <li>出发日期：{{item.date.substring(0,10).replace(/-/g,'/')}}</li>
              <li>数量：{{item.cabinName}}*{{item.count}}</li>
              <li>联系人：{{item.LinkMan}}</li>
              <li>电话：<a :href="'tel:'+item.LinkPhone">{{item.LinkPhone}}</a></li>
            </ul>
            <ul class="status-title clearfloat">
              <li>出行人状态</li>
              <li>资源状态</li>
              <li>资金状态</li>
            </ul>
            <ul class="clearfloat status-panel">
              <li v-for="(statusItem,itemIndex) in statusArr[index]" :class="statusItem.status ? 'status-change':''" class="status-item">
                <div class="info">
                  <span>{{statusItem.title}}</span>
                  <div class="clearfloat" v-if="(item.paymentStatus == 'deposit' || item.paymentStatus == 'confirm') && itemIndex == 2">
                    <span v-if="item.deposit" class="tips"><span :class="(item.paymentStatus == 'deposit' || item.paymentStatus == 'confirm')?'':'change'" class="pull-left">定金 {{item.deposit?item.deposit:0}}</span><span :class="(item.paymentStatus == 'deposit' || item.paymentStatus == 'confirm')?'':'change'" class="pull-right">{{(item.paymentStatus == 'deposit' || item.paymentStatus == 'confirm')?'已付':'未付'}}</span></span>
                    <span v-if="(item.paymentStatus == 'confirm' && item.deposit) || item.deposit" class="tips"><span :class="item.paymentStatus == 'confirm'?'':'change'" class="pull-left">{{item.deposit?'尾款 '+(item.amount-item.deposit):'全款 '+item.amount}}</span><span :class="item.paymentStatus == 'confirm'?'':'change'" class="pull-right">{{item.paymentStatus == 'confirm'?'已付':'未付'}}</span></span>
                  </div>
                  <div class="clearfloat" v-if="item.paymentStatus == 'none' && item.resourceStatus !== 'none' && itemIndex == 2">
                    <span @click="payment(item)" class="tips-btn">付款</span>
                  </div>
                  <div class="clearfloat end-date" v-if="(item.paymentStatus == 'deposit'||item.paymentStatus == 'none') && item.resourceStatus == 'lock' && itemIndex == 1 && item.expireDate">
                    倒计时:{{item.expireDate}}
                  </div>
                  <div class="clearfloat" v-if="!statusItem.status && itemIndex == 0">
                    <span @click="showPersonPanel(item)" class="tips-btn">编辑</span>
                  </div>
                </div>
              </li>
            </ul>
          </div>
        </div>
        <div class="number-wrapper panel-bottom">
          <div class="content-center clearfloat">
            <span class="order-num">下单日期：{{item.addDate.substring(0,10).replace(/-/g,'/')}}&nbsp;&nbsp;{{item.addDate.substring(11,19)}}</span>
          </div>
        </div>
      </section>
    </mt-loadmore>
    <div v-if="orderList.length==0" class="blank-page">
      <img src="../assets/img/blank-search.jpg" alt="">
      <span>暂时没有相关内容</span>
    </div>
    <transition  name="custom-classes-transition"
                 enter-active-class=" animated slideInRight"
                 leave-active-class="animated slideOutRight">
      <div class="person-wrap" v-if="showPerson.status">
        <personPanel :order="order" :showPerson="showPerson"></personPanel>
      </div>
    </transition>
    <Payment v-if="isPayment" :content="paymentObj" @confirm="personConfirm"></Payment>
  </div>
</template>

<script>
  let vm;
  import personPanel from '@/components/personPanel'
  import common from '@/assets/js/common';
  import Payment from "@/components/paymentPage.vue";
  export default {
    name: 'orderAll',
    components: {
      personPanel,
      Payment
    },
    data(){
      return{
        total: 0,
        page: 1,
        allLoaded: false,
        orderList: new Array,
        parame: {
          page: 1,
          rows: 3,
          queryParam: '',
          startDate: '',
          endDate: ''
        },
        statusArr:new Array,
        showPerson: {
          status: false
        },
        order: '',
        isPayment : false,
        paymentObj:{},
      }
    },
    mounted(){
      vm = this;
      vm.getData();
    },
    methods: {
      getData(){
        vm.axios.post(this.api+this.urlApi.queryCruiseOrderList,vm.parame).then(function (respones) {
          if(respones.status){
            let content = respones.content;
            vm.total = content.total;
            if (content.rows.length) {
            	vm.orderList.length ?  vm.orderList = vm.orderList.concat(content.rows) :  vm.orderList = content.rows;
            }
            vm.setStatusArr();
          }
        })
      },
      loadBottom() {
        if( vm.page * 3 < vm.total ){
          vm.page++;
          vm.parame.page = vm.page;
          vm.getData();
        }else {
          vm.allLoaded = true;
        }
        this.$refs.loadmore.onBottomLoaded();
      },
      jumpDetail(numberCode){
        sessionStorage.setItem('numberCode',numberCode);
        vm.$router.push('/productDetail');
      },
      setStatusArr(){
        vm.statusArr = new Array;
        for(let i=0;i<vm.orderList.length;i++){
          let obj = vm.orderList[i];
          if(obj.expireDate && (obj.paymentStatus == 'deposit'||obj.paymentStatus == 'none')) obj.expireDate = common.timeFn(obj.expireDate);
          let statusItem = new Array;
          statusItem[0] = new Object;
          statusItem[1] = new Object;
          statusItem[2] = new Object;
          if(obj.isPersonConfirm) {
            statusItem[0].title = '已确认出行人';
            statusItem[0].status = true;
          }else {
            statusItem[0].title = '待确认出行人';
            statusItem[0].status = false;
          }
          let resourceTitle,paymentTitle;
          let resourceStatus,paymentStatus;
          switch (obj.resourceStatus)
          {
            case 'none':
              resourceTitle = '资源确认中';
              resourceStatus = false;
              break;
            case 'lock':
              resourceTitle = '已留舱';
              resourceStatus = false;
              break;
            case 'confirm':
              resourceTitle = '已确认';
              resourceStatus = false;
              break;
            case 'submit':
              resourceTitle = '已出票';
              resourceStatus = true;
              break;
            case 'cancel':
              resourceTitle = '已失效';
              resourceStatus = false;
              break;
          }
          statusItem[1].title = resourceTitle;
          statusItem[1].status = resourceStatus;
          switch (obj.paymentStatus)
          {
            case 'none':
              paymentTitle = '待付款';
              paymentStatus = false;
              break;
            case 'deposit':
              paymentTitle = '定金确认';
              paymentStatus = false;
              break;
            case 'confirm':
              paymentTitle = '全款确认';
              paymentStatus = false;
              break;
            case 'ticket':
              paymentTitle = '已开票';
              paymentStatus = true;
              break;
          }
          statusItem[2].title = paymentTitle;
          statusItem[2].status = paymentStatus;
          vm.statusArr.push(statusItem);
        }
      },
      payment(obj){
          vm.paymentObj = obj;
          vm.isPayment = true;
      },
      showPersonPanel(obj){
      	vm.order = obj.numberCode;
        vm.showPerson.status = true;
        vm.bodyNoScrolling.open();
      },
      personConfirm(flag){
        if(flag){
          vm.axios.post(this.api+this.urlApi.orderPayOper,{order:vm.paymentObj.numberCode}).then(function (respones) {
            if(respones.status){
              vm.isPayment = false;
            }
            location.reload();
          })
        }else {
          vm.isPayment = false;
        }
      },
    }
  }

</script>

<style scoped lang="less">
  @import "../assets/css/base.less";

  .orderAll{
    width: 100%;
    padding-top: 17*@basePX;
    &:after{
      content: ' ';
      display: block;
      width: 100%;
      height: 20*@basePX;
      background-color: #fff;
    }
    section{
      background: #fff;
      &:not(:first-child){
        margin-top: 17*@basePX;
      }
      .content-center{
        width: 92%;
        margin: 0 auto;
        .cabin-type{
          float: right;
        }
      }
      .number-wrapper{
        line-height: 56*@basePX;
        font-size: 26*@basePX;

        .order-num{
          float: left;
        }
      }
      .panel-top{
        background-color: @changeBtnBg;
        color: #fff;
      }
      .panel-bottom{
        background-color: @appBg;
      }
      .info-wrapper{
        background-color: #fff;
      }
      .order-info{
        &:first-child{
          border-bottom: 1px solid @lineColor;
        }
        padding: 16*@basePX 0;
        position: relative;
        .info{
          float: left;
          font-size: 26*@basePX;
          &:not(:first-child) {
            margin-left: 5%;
          }
        }
        .img-wrap{
          float: left;
          width: 25%;
          height: 110*@basePX;
          .borderRadius(4*@basePX);
          overflow: hidden;
          img{
            width: 100%;
            height: 100%;
            max-width: 100%;
            max-height: 100%;
          }
        }
        .detail{

          float: left;
          width: 50%;
          margin-left: 4%;
          overflow: hidden;
          padding-top: 10*@basePX;
          h3{
            font-size: 28*@basePX;
            color: #4c4c4c;
          }
        }
        .tips{
          right: 0;
          width: 20%;
          display: table;
          position: absolute;
          top: 50%;
          transform: translateY(-50%);
          .old-price,
          .fanxian{
            display: table-cell;
            vertical-align: middle;
            text-align: center;
            float: right;
            width: 100%;
          }

          .old-price{
            font-size: 38*@basePX;
            color: @tipsColor;
          }
          .fanxian{
            display: block;
            height: 32*@basePX;
            width: 130*@basePX;
            background: #ff0000;
            color: #fff;
            text-align: center;
            line-height: 32*@basePX;
            font-size: 24*@basePX;
            .borderRadius(14*@basePX)
          }
        }
      }
      .info-panel{
        width: 100%;
        border-bottom: 1px solid @lineColor;
        li{
          width: 50%;
          color: @subTextColor;
          padding: 10*@basePX 0;
          float: left;
          a{
            text-decoration: none;
            color: @changeBtnBg;
          }
        }
      }
      .status-title{
        width: 100%;
        margin-top: 10*@basePX;
        li{
          float: left;
          width: 33.3333333%;
          text-align: center;
          color: #333;
        }
      }
      .status-panel{
        width: 100%;
        margin-bottom: 24*@basePX;
        .status-item{
          width: 222*@basePX;
          height: 100*@basePX;
          margin-right: 0.23866667rem;
          float: left;
          text-align: center;
          .borderRadius(6px);
          background-color: #e1eeff;
          position: relative;
          &:last-child{
            margin-right: 0;
          }
          .info{
            width: 100%;
            text-align: center;
            color: @tipsColor;
            position: absolute;
            left: 0;
            top: 50%;
            transform: translateY(-50%);
            line-height: 32*@basePX;
            .tips{
              display: block;
              font-size: 12px;
              color: #0ab012;
              .pull-left{
                padding-left: 12*@basePX;
              }
              .pull-right{
                padding-right: 12*@basePX;
              }
              .change{
                color: #2c3e50;
              }
            }
            .end-date{
              font-size: 12px;
            }
            .tips-btn{
              background: @changeBtnBg;
              display: block;
              width: 120*@basePX;
              height: 38*@basePX;
              line-height: 38*@basePX;
              margin: 8*@basePX auto 0;
              .borderRadius(38*@basePX);
              cursor: pointer;
              color: #fff;
            }
          }
        }
        .status-change{
          background-color: #eafeeb;
        }
      }
    }
    .blank-page{
      width: 100%;
      padding: 32*@basePX 22*@basePX 25*@basePX;
      overflow-x: hidden;
      text-align: center;
      img{
        width: 508*@basePX;
        height: 404*@basePX;
        display: block;
        margin: 28*@basePX auto 0;
        transform: translateX(20*@basePX);
      }
      span{
        display: block;
        padding-top: 50*@basePX;
        color: @subTextColor;
        font-size: 32*@basePX;
      }
    }
    .person-wrap{
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      max-height: 100%;
      z-index: 15;
      overflow: hidden;
      background-color: #fff;
    }
    .animated {
      animation-duration: .5s;
      animation-fill-mode: both;
    }
    @keyframes slideInRight {
      from {
        transform: translate3d(100%, 0, 0);
        visibility: visible;
      }

      to {
        transform: translate3d(0, 0, 0);
      }
    }

    .slideInRight {
      animation-name: slideInRight;
    }

    @keyframes slideOutRight {
      from {
        transform: translate3d(0, 0, 0);
      }

      to {
        visibility: hidden;
        transform: translate3d(100%, 0, 0);
      }
    }

    .slideOutRight {
      animation-name: slideOutRight;
    }
  }

</style>
